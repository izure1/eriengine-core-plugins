import { Vector2, Point2 } from "../../../@common/Math/MathUtil";
import { Actor } from './Actor';
export declare class ActorRun {
    private upKey;
    private downKey;
    private leftKey;
    private rightKey;
    private isStopWhenDepress;
    private actor;
    private speed;
    private routes;
    private checkKeepGoing;
    static update(run: ActorRun, time: number, delta: number): void;
    static destroy(run: ActorRun): void;
    constructor(actor: Actor);
    get velocity(): Vector2;
    get velocityX(): number;
    get velocityY(): number;
    get isMoving(): boolean;
    get isMovingLeft(): boolean;
    get isMovingRight(): boolean;
    get isMovingUp(): boolean;
    get isMovingDown(): boolean;
    get isRouting(): boolean;
    private get currentSign();
    private get scene();
    setSpeed(speed: number): this;
    getSpeed(): number;
    left(): this;
    right(): this;
    up(): this;
    down(): this;
    to(routes: Point2[], checkKeepGoing?: () => boolean): this;
    stop(): this;
    private arriveCurrentSign;
    private routingAutomatic;
    private moveAutomatic;
    useMoveKey(method: 'arrow' | 'wasd', isStopWhenDepress?: boolean, reverse?: boolean): this;
    stopUsingMoveKey(): this;
    private update;
    private destroy;
}
